version: '3.8'
services:
  mongo1:
    image: mongo:latest
    container_name: mongo1
    ports:
      - 27017:27017
    networks:
      - mongo-cluster
    volumes:
      - mongo1_data:/data/db
    command: >
      bash -c "mongod --replSet rs2 --bind_ip_all"

  mongo2:
    image: mongo:latest
    container_name: mongo2
    ports:
      - 27018:27017
    networks:
      - mongo-cluster
    volumes:
      - mongo2_data:/data/db
    command: >
      bash -c "mongod --replSet rs2 --bind_ip_all"

  mongo3:
    image: mongo:latest
    container_name: mongo3
    ports:
      - 27019:27017
    networks:
      - mongo-cluster
    volumes:
      - mongo3_data:/data/db
    command: >
      bash -c "mongod --replSet rs2 --bind_ip_all"

  setup:
    image: mongo:latest
    container_name: mongo_setup
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo-cluster
    command: >
      bash -c "while ! mongo --host mongo1 --eval 'quit(0)' 2>/dev/null; do sleep 1; done;
               mongo --host mongo1 <<EOF
               rs.initiate({
                 _id: 'rs2',
                 members: [
                   { _id: 0, host: 'mongo1:27017' },
                   { _id: 1, host: 'mongo2:27017' },
                   { _id: 2, host: 'mongo3:27017' }
                 ]
               });
               rs.status();
               EOF"

networks:
  mongo-cluster:
    driver: bridge

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
